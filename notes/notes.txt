app.py (main.py)

front end folder
logic folder (connect front end to back end)
data folder

inside the logic folder you can have different files for the features/things that you need

python is a bit weird about the directories it looks for a module in. We will have to be smarter about how we layer modules and create functions. 
"That path is not present in the list". Python always checks the directory that your file that you're running is in. We need to include the directory. 

The best way to do this is to add the path as an environment variable. https://www.youtube.com/watch?v=HNChkuE6HyA

export PYTHONPATH=/Users/jacksonmiskill/Projects/norfolk-gui:${PYTHONPATH}  <- dis da code

Bascially, for a computer to be able to access all of the modules that you want, the sys.path needs to contain the environment variable that is the Project directory.

We will need to include executables in order to run the package properly. 


5/19/2023

You need to have a setup.py file in order to allow for the module you write to be accessible in other modules.
The websites for this are below: 
https://docs.python-guide.org/writing/structure/
https://github.com/navdeep-G/samplemod/blob/master/sample/core.py
https://kennethreitz.org/essays/2013/01/27/repository-structure-and-python

For the architecture of projects, you need the following: the module you're writing, a license, 
the requirements.txt file, the setup.py file, Makefile, documentation and test suite. 

You need these in order to build the project. 

I used the Makefile in order to execute the build for the setup. The setup is something that was created
by the maintainers of Python (it's not some other module). I think they started to create it once
people started to use Python a lot more. 



6/16/2023

tkinter is what I'll use as the GUI

to install into VENV:

pip install tk



